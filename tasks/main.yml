---
# install proxmox VE (part 1)
#

- name: Ensure has an entry in /etc/hosts which assigns an IPv4 address. 
  lineinfile: "state=present dest=/etc/hosts
  regexp='^{{ proxmox_eth0_ipv4 }}'
  line='{{ proxmox_eth0_ipv4 }} {{ ansible_hostname }} pvelocalhost'"

- name: Ensure hostname is not ont the same line of localhost
  lineinfile: "state=absent dest=/etc/hosts
  regexp='localhost.{{ ansible_hostname }}'
  backup=true"

  
- name: add the Proxmox VE repository
  lineinfile: "state=present dest=/etc/apt/sources.list
  regexp='^deb http://download.proxmox.com'
  line='deb http://download.proxmox.com/debian wheezy pve'
  backup=true"

- name: add the Proxmox VE repository key
  apt_key: url=http://download.proxmox.com/debian/key.asc state=present

- name: check if already installed
  shell: "grep pve /boot/grub/grub.cfg"
  register: proxmox_installed

- debug: var=proxmox_installed

- name: run sysupgrade
  apt: update_cache=yes upgrade=dist
  when: (proxmox_installed.stdout is defined) and (proxmox_installed.stdout.find("pve") == -1)

 
- name: install proxmox VE firmware
  apt: pkg=pve-firmware state=latest

- name: install proxmox VE kernel
  apt: pkg=pve-kernel-2.6.32-26-pve state=latest

- name: set default boot to VE kernel
  lineinfile: "state=present dest=/etc/default/grub
  regexp='^GRUB_DEFAULT='
  line=GRUB_DEFAULT=2
  backup=true"

- name: update grub
  command: update-grub
  when: (proxmox_installed.stdout is defined) and (proxmox_installed.stdout.find("pve") == -1)

- name: setup IPV4 forwarding for NAT
  lineinfile: "state=present dest=/etc/sysctl.conf
  regexp='^#?net.ipv4.ip_forward'
  line=net.ipv4.ip_forward=1"
  tags:
    - nat

- name: reboot machine
  command: shutdown -r now "Ansible updates triggered"
  async: 0
  poll: 0
  ignore_errors: true
  when: (proxmox_installed.stdout is defined) and (proxmox_installed.stdout.find("pve") == -1)

- name: wait for shutdown...
  local_action: wait_for host={{ inventory_hostname }} port=22 state=stopped 
  when: (proxmox_installed.stdout is defined) and (proxmox_installed.stdout.find("pve") == -1)

- name: wait until SSH becomes ready...
  local_action: wait_for host={{ inventory_hostname }} state=started
  sudo: false
  when: (proxmox_installed.stdout is defined) and (proxmox_installed.stdout.find("pve") == -1)

- name: is it running?
  command: uptime

- name: install dependency packages for PVE
  apt: pkg={{ item }} state=present
  with_items:
    - ntp
    - lvm2
    - postfix 
    - ksm-control-daemon 
    - vzprocps 
    - open-iscsi 
    - bootlogd
  tags:
    - after-reboot

- name: install dependency packages for PVE
  apt: pkg=proxmox-ve-2.6.32 state=present
  tags:
    - after-reboot


