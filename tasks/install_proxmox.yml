---
# install proxmox VE (part 1)
#

- name: Ensure has an entry in /etc/hosts which assigns an IPv4 address. 
  lineinfile: >
    state=present dest=/etc/hosts
    regexp='^{{ proxmox_eth0_ipv4 | default(ansible_default_ipv4.address)}}'
    line='{{ proxmox_eth0_ipv4 | default(ansible_default_ipv4.address) }} {{ ansible_hostname }} pvelocalhost'

- name: Ensure hostname is not on the same line of localhost
  lineinfile: >
    state=absent 
    dest=/etc/hosts
    regexp='^127(.*){{ ansible_hostname }}'
    backup=true
  tags:
    - hosts

- name: Ensure hostname is not on an ipv6 line
  lineinfile: >
    state=present 
    dest=/etc/hosts
    backrefs=true
    regexp='(.*::.*){{ ansible_hostname }}(.*)'
    line="\1\2"
  tags:
    - hosts
  
- name: add the Proxmox VE repository
  lineinfile: "state=present dest=/etc/apt/sources.list
  regexp='^deb http://download.proxmox.com'
  line='deb http://download.proxmox.com/debian wheezy pve'
  backup=true"

- name: add the Proxmox VE repository key
  apt_key: url=http://download.proxmox.com/debian/key.asc state=present

- name: check if already installed
  shell: "grep pve /boot/grub/grub.cfg"
  register: proxmox_installed
  ignore_errors: true
  changed_when: false

- debug: var=proxmox_installed

- name: run sysupgrade
  apt: update_cache=yes upgrade=dist cache_valid_time=600
  when: (proxmox_installed.stdout is not defined) or (proxmox_installed.stdout == '')
 
- name: install proxmox VE firmware
  apt: pkg=pve-firmware state=latest update_cache=yes

- name: install proxmox VE kernel
  apt: pkg=pve-kernel-2.6.32-26-pve state=latest

- name: set default boot to VE kernel
  lineinfile: "state=present dest=/etc/default/grub
  regexp='^GRUB_DEFAULT='
  line=GRUB_DEFAULT=2
  backup=true"

- name: update grub
  command: update-grub
  when: (proxmox_installed.stdout is not defined) or (proxmox_installed.stdout == '')

- name: setup IPV4 forwarding for NAT
  lineinfile: "state=present dest=/etc/sysctl.conf
  regexp='^#?net.ipv4.ip_forward'
  line=net.ipv4.ip_forward=1"
  tags:
    - nat

- name: reboot machine
  command: shutdown -r now "Ansible updates triggered"
  async: 0
  poll: 0
  ignore_errors: true
  when: (proxmox_installed.stdout is not defined) or (proxmox_installed.stdout == '')

- name: wait for shutdown...
  local_action: wait_for host={{ inventory_hostname }} port=22 state=stopped 
  when: (proxmox_installed.stdout is not defined) or (proxmox_installed.stdout == '')

- name: wait until SSH becomes ready...
  local_action: wait_for host={{ inventory_hostname }} state=started
  sudo: false
  when: (proxmox_installed.stdout is not defined) or (proxmox_installed.stdout == '')

- name: is it running?
  command: uptime
  register: uptime_result
  changed_when: (uptime_result.stdout is not defined) or (uptime_result.stdout == '')
  when: (proxmox_installed.stdout is not defined) or (proxmox_installed.stdout == '')

- name: install dependency packages for PVE
  apt: pkg={{ item }} state=present
  with_items: proxmox_base_packages
  tags:
    - after-reboot

- name: install dependency packages for PVE
  apt: pkg=proxmox-ve-2.6.32 state=present
  tags:
    - after-reboot

- name: install default template(s)
  get_url:
    url="{{ item.url }}"
    dest="{{ proxmox_template_path }}/{{ item.filename }}"
    sha256sum="{{ item.sha256sum }}"
  with_items: proxmox_templates
  tags:
    - after-reboot

- name: ensure pve-enterprise repo is disable (need a valid subscription) 
  synchronize: src="etc-apt-sources.list.d/pve-enterprise.list" dest="/etc/apt/sources.list.d/pve-enterprise.list"
  tags:
    - after-reboot

- name: Modprobe some modules to enable firewall in containers 
  shell: 'modprobe xt_tcpudp && modprobe ip_conntrack' 
  tags:
    - after-reboot

- name: Add ipt_state to iptables modules in vz.conf
  lineinfile: >
    state=present 
    dest=/etc/vz/vz.conf
    regexp='^IPTABLES='
    line='IPTABLES="ipt_REJECT ipt_tos ipt_limit ipt_multiport iptable_filter iptable_mangle ipt_TCPMSS ipt_tcpmss ipt_ttl ipt_length ipt_state"'
  tags:
    - after-reboot 

